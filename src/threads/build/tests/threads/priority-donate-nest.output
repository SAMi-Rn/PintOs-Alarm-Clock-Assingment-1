squish-pty bochs -q

PiLo hda1
Loading.............
Kernel command line: -q run priority-donate-nest
Pintos booting with 4,096 kB RAM...
383 pages available in kernel pool.
383 pages available in user pool.
Calibrating timer...  102,400 loops/s.
Boot complete.
Executing 'priority-donate-nest':
(priority-donate-nest) begin
(priority-donate-nest) Low thread should have priority 32.  Actual priority: 31.
(priority-donate-nest) Low thread should have priority 33.  Actual priority: 31.
(priority-donate-nest) Medium thread should just have finished.
(priority-donate-nest) Low thread should have priority 31.  Actual priority: 31.
(priority-donate-nest) end
Execution of 'priority-donate-nest' complete.
Timer: 155 ticks
Thread: 0 idle ticks, 160 kernel ticks, 0 user ticks
Console: 722 characters output
(priority-donate-nest) Medium thread should have priority 33.  Actual priority: 32.
(priority-donate-nest) Medium thread got the lock.
Kernel PANIC at ../../threads/synch.c:232 in lock_release(): assertion `lock_held_by_current_thread (lock)' failed.
Call stack: 0xc002b839 0xc002377c 0xc002fa8c 0xc00214e5.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 211 ticks
Thread: 0 idle ticks, 211 kernel ticks, 0 user ticks
Console: 1285 characters output
Keyboard: 0 keys pressed
Powering off..